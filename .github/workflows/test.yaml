name: Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #v4.2.2
        with:
          submodules: 'recursive'

      - name: Clone avmpolicytester
        run: |
          git clone https://github.com/lonegunmanb/avmpolicytester.git /tmp/avmpolicytester

      - name: Set up Go
        uses: actions/setup-go@f111f3307d8850f501ac008e886eec1fd1932a34 #v5.3.0
        with:
          go-version-file: /tmp/avmpolicytester/go.mod
      - name: Setup OPA
        uses: open-policy-agent/setup-opa@34a30e8a924d1b03ce2cf7abe97250bbb1f332b5 #v2.2.0
        with:
          version: latest

      - name: Install conftest
        run: CGO_ENABLED=0 go install github.com/open-policy-agent/conftest@latest
      - name: Run utils tests
        run: |
          echo `opa version`
          target="./policy/common"
          echo $target
          set -o pipefail
          opa test $target -v || exit 1
          coverage_json=$(opa test --coverage --format=json $target -v)
          coverage=$(echo $coverage_json | jq '.coverage')
          echo "Coverage: $coverage"

          if [ "$coverage" != "100" ]; then
            echo $coverage_json | jq
            printf "\n\e[0;31mRule test coverage must be 100%%\e[0m\n"
            exit 1
          fi;
      - name: Run tests
        run: |
          export POLICY_DIR="$(pwd)/policy"
          export UTILS_REGO="$(pwd)/policy/common"
          cd /tmp/avmpolicytester
          go test -v github.com/lonegunmanb/avmpolicytester/...